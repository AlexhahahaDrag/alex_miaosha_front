user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    # include /etc/nginx/conf.d/*.conf;

    upstream backupUrl {
        server gateway:30001 weight=1 max_fails=2 fail_timeout=10s;
    }

  	server {
        listen       3000;
        charset utf-8;
        server_name  mjzp.xyz;# 服务器地址或绑定域名

    	# start ---------------------------------------------------------------------------------------------
        location / {
           root   /usr/share/nginx/html;
           index index.html index.htm;
           try_files $uri $uri/ /index.html;
        }

        location /api/ {
           proxy_pass http://gateway:30001/;
           #保留代理之前的host 包含客户端真实的域名和端口号
           proxy_set_header Host $host;
           #保留代理之前的真实客户端ip
           proxy_set_header X-Real-IP $remote_addr;
           #这个Header和X-Real-IP类似，但它在多级代理时会包含真实客户端及中间每个代理服务器的IP
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           #表示客户端真实的协议（http还是https）
           proxy_set_header REMOTE-HOST $remote_addr;
           #add_header X-Cache $upstream_cache_status;
           #add_header Cache-Control no-cache;
        }
        # end ---------------------------------------------------------------------------------------------

        # 这里对应桶名
        location /user-bucket/ {
            proxy_read_timeout 600s;
            # 配置minio访问地址与桶名
            proxy_pass http://81.70.158.140:9000/user-bucket/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Special-Delivery "";
            proxy_set_header Access-Control-Allow-Origin "";
            proxy_set_header Proxy-Client-IP $remote_addr;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header X-Special-Delivery "stop-polling-our-interface-you-bitch" always;
            add_header Access-Control-Allow-Origin "you-poll-your-mama-blyat" always;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
   }

   server {
       # Minio API
       listen       9000;
       server_name  81.70.158.140;
       location / {
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
           proxy_set_header Host $http_host;
           proxy_connect_timeout  3000;
           proxy_http_version 1.1;
           proxy_set_header Connection "";
           proxy_pass http://81.70.158.140:9000;
       }

       error_page   500 502 503 504  /50x.html;
       location = /50x.html {
           root   /usr/share/nginx/html;
       }
   }
}

